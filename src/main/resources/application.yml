spring:
  #datasource:
  #  jdbc-url: jdbc:mysql://localhost:3306/eatmate?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
  #  driver-class-name: com.mysql.cj.jdbc.Driver
  #  username: root
  #  password: 1234

  #jpa:
  #  hibernate:
  #    ddl-auto: update
  #  properties:
  #    hibernate:
  #      dialect: org.hibernate.dialect.MySQL8Dialect
  #      jdbc.batch_size: 1000
  #      order_inserts: true
  #      order_updates: true

  datasource:
    jdbc-url: jdbc:h2:tcp://localhost/~/eatmate
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  redis:
    host: localhost
    port: 6379
  jwt:
    secret: jIxcYARLKbjsUFEPksAcekGXpubvTVL+UxuNL68nqpE=
  logging:
    level:
      root: DEBUG                #모든 로그의 기본 레벨을 ERROR로 설정
      org.springframework: DEBUG # 스프링 관련 로그도 ERROR로 제한
      org.hibernate: DEBUG       # Hibernate 로그도 ERROR만 기록
      org.springframework.security: DEBUG
      org.springframework.cache: trace
      org.springframework.cache.interceptor.CacheInterceptor: trace

  #STATIC 파일 자동 반영
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: false
  #FTL 템플릿 파일도 반영
  #  freemarker:
  #    template-loader-path: classpath:/template/chat/
  #    suffix: .ftl
  #    cache: false

  security:
    oauth2:
      client:
        registration:
          #카카오
          kakao:
            client-id: ${kakao.client.id}
            client-secret: ${kakao.client.secret}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"

          #네이버
          naver:
            client-id: ${naver.client.id}
            client-secret: ${naver.client.secret}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name

          # 구글
          google:
            client-id: ${google.client.id}
            client-secret: ${google.client.secret}
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          #네이버
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

#파일 업로드 경로
file:
  dir:
    account: C:/TeamProject/eatmate/img/profileimg
    team: C:/TeamProject/eatmate/img/teamimg
    teamPost: C:/TeamProject/eatmate/img/teampostimg

#OPEN API 설정
kakao:
  client:
    id: e14cb05b33510d6d6fb59bc77f202156
    secret: jBgKKQxp5icYdE8NdbWWP7wbJjTFMhcJ
naver:
  client:
    id: vxzSX7hpBWdUiZGim9aX
    secret: STysDb2fkw
google:
  client:
    id: 22110496570-9okorgjcubqkb5qvfthfu398k6et0gg0.apps.googleusercontent.com
    secret: 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


---
# 운영
spring:
  config:
    activate:
      on-profile: prod
  server:
    port: 80
  #DB - 1
  datasource:
    jdbc-url: jdbc:mysql://bonapetit.cnucyg8w8tyu.ap-northeast-2.rds.amazonaws.com:3306/bonapetit?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: admin
    password: bonapetit0902
  #jpa
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect     
  #redis
  redis:
    host: localhost
    port: 6379
  #jwt 토큰
  jwt:
    secret: jIxcYARLKbjsUFEPksAcekGXpubvTVL+UxuNL68nqpE=
  #devTools
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: false
  #Security 및 Oauth 설정
  security:
    oauth2:
      client:
        registration:
          #카카오
          kakao:
            client-id: ${kakao.client.id}
            client-secret: ${kakao.client.secret}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/kakao"

          #네이버
          naver:
            client-id: ${naver.client.id}
            client-secret: ${naver.client.secret}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/naver"
            scope:
              - name

          # 구글
          google:
            client-id: ${google.client.id}
            client-secret: ${google.client.secret}
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/google"
            scope:
              - email
              - profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          #네이버
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

#OPEN API 설정
kakao:
  client:
    id: fde79d1d4d914a0bafc33c44c782740b
    secret: QnDQdaUkBbH4zoppp9t42xTVzSnHNjKL
naver:
  client:
    id: vxzSX7hpBWdUiZGim9aX
    secret: STysDb2fkw
google:
  client:
    id: 22110496570-9okorgjcubqkb5qvfthfu398k6et0gg0.apps.googleusercontent.com
    secret: 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

#파일 업로드 경로
file:
  dir:
    account: C:/TeamProject/eatmate/img/profileimg
    team: C:/TeamProject/eatmate/img/teamimg
    teamPost: C:/TeamProject/eatmate/img/teampostimg


---
# 운영
spring:
  config:
    activate:
      on-profile: prod
  server:
    port: 80
  #DB - 1
  datasource:
    jdbc-url: jdbc:mysql://bonapetit.cnucyg8w8tyu.ap-northeast-2.rds.amazonaws.com:3306/bonapetit?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: admin
    password: bonapetit0902
  #jpa
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect     
  #Redis 세션 설정
  session:
    store-type: redis #Redis를 세션 저장소로 설정
    redis:
      flush-mode: immediate  # 세션이 변경될 때마다 Redis에 즉시 반영
    servlet:
      session:
        timeout: 30m #세션 타임아웃 (30분)

  #redis
  redis:
    host: 13.209.114.158
    port: 6379
    lettuce:
      pool:
        max-active: 50     # 동시에 사용할 수 있는 최대 연결 수
        max-idle: 40       # 유지할 수 있는 최대 유휴 연결 수
        min-idle: 1        # 유지할 최소 유휴 연결 수

  #jwt 토큰
  jwt:
    secret: jIxcYARLKbjsUFEPksAcekGXpubvTVL+UxuNL68nqpE=
  # 로깅 설정 - 최소화
  logging:
    level:
      root: ERROR   # 기본 로그 레벨을 ERROR로 설정하여 로그를 최소화
      org.springframework: ERROR
      org.hibernate.SQL: WARN  # Hibernate SQL 로그는 경고 수준으로 설정

  #devTools
  devtools:
    livereload:
      enabled: false
    restart:
      enabled: false

  #Security 및 Oauth 설정
  security:
    oauth2:
      client:
        registration:
          #카카오
          kakao:
            client-id: ${kakao.client.id}
            client-secret: ${kakao.client.secret}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/kakao"

          #네이버
          naver:
            client-id: ${naver.client.id}
            client-secret: ${naver.client.secret}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/naver"
            scope:
              - name

          # 구글
          google:
            client-id: ${google.client.id}
            client-secret: ${google.client.secret}
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: "https://api.bonappetit.p-e.kr/login/oauth2/code/google"
            scope:
              - email
              - profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          #네이버
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

#OPEN API 설정
kakao:
  client:
    id: fde79d1d4d914a0bafc33c44c782740b
    secret: QnDQdaUkBbH4zoppp9t42xTVzSnHNjKL
naver:
  client:
    id: lAdfDOROdRGWjU95bKiI
    secret: dt4nxfpYqd
google:
  client:
    id: 96886339757-jqmnr3cf8715lqjujmmfjubnjcablnor.apps.googleusercontent.com
    secret: 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

#파일 업로드 경로
file:
  dir:
    account: C:/TeamProject/eatmate/img/profileimg
    team: C:/TeamProject/eatmate/img/teamimg
    teamPost: C:/TeamProject/eatmate/img/teampostimg

#액츄에이터 기능 웹 노출
# Micrometer와 Prometheus 연동 설정
management:
  endpoints:
    web:
      exposure:
        include: "*"  # Prometheus 메트릭 노출"

  metrics:
    export:
      prometheus:
        enabled: true  # Prometheus 활성화
logging:
  file:
    name: /home/ubuntu/app.log  #로그 파일 경로
